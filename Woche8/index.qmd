---
title: "week8"
author: "Pauline Kinzler"
---

```{r}
#Vectors: contain a sequence of data points. every part of the vector has to be the same, do not mix.
vec1 <- c(1,2,3,5,7)
vec2 <- c("JOHN", "HANNAH", "AREN")

vec2[3]
vec2[2:3]
vec1[2:5]

vec3 <- c(1,2,3,4,5)

vec1[4:5] <- c(4,5) #I'm replacing places 4 and 5 with the numbers 4 and 5.
vec1[4:5] <- c(20,55)

vec1*10 #multiply every place in the vector times 10


sim1 <- rnorm(n=10, mean = 100, sd = 15) #n = how many values/observations. 
sim1
runif()
sample(vec2, 10, replace = TRUE) #sample of ten values of this vector.
sample(vec2, 10, replace = TRUE, prob = c(0.9, 0.1, 0)) # I want john to appear more often. the vector must be the same length of the original vector (here vec2)
hist(sim1)
hist(sim1/15)



#list: each entry in the list can be anything I want. e.g. the first item in my list can be a vector.
list1 <- list(3,4,5,6,7)
list1
names <- c("JOHN", "ANNY", "HARRIS")
ages <- c(24,35,67)

list1 <- list(names, ages)

list1[1][1][1] #funktioniert nicht. result of this is still a list with the contents of the first element of the list.
list1[[1]] #result of this is the first element of the list, which is in this case a vector

#data frames are lists
str() #see the internal structure of an object

x <- data.frame(x = rnorm(10), y = sample(letters, 10))

sim_data <- list(rnorm(10), rnorm(10), rnorm(10)) #nicht so sagt Noah. weil ich müsste für immer alles aufschreiben. stattdessen so: 

sim_data <- list()

for (step in 1:10) {
  print(step)
}

for (step in 1:10) {
  sim_data[step] <- rnorm(5,100,15)
} #hä warum geht das nicht

my_means <- c()

for (step in 1:length(sim_data)) {
  my_means[step] <- mean(sim_data[[step]])
}

hist(my_means)

```
