{
  "hash": "68b023272b960c6a24ee42eaf0fc3887",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2\"\nauthor: \"Pauline Kinzler\"\n---\n\n\n\n\nQuestions:\n\n1.  for this assignment, which part of the simulation do we have to replicate\n2.  what's the difference between commit and push?\n3.  \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##Anfangsdefinitionen\nN  <- 5000  # Größe der Population\nMU <- 100   # Mittelwert der Population\n\n# Population mit Normalverteilung erstellen\npopulation <- rnorm(N, mean=MU, sd=MU/5)\n\n# Optional: Einen Blick auf die ersten paar Werte werfen\nhead(population)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 104.55321  91.38377 132.08195  96.86375  96.57512 121.27153\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Gini-Koeffizient\ngini <- function(y) {\n  # Berechne den Gini-Koeffizienten für die Bevölkerung y\n  y <- sort(y)  # Sortiere die Werte in aufsteigender Reihenfolge\n  n <- length(y)  # Anzahl der Werte\n  \n  numer <- 2 * sum((1:n) * y)  # Zähler\n  denom <- n * sum(y)  # Nenner\n  \n  return ((numer / denom) - (n + 1) / n)  # Gini-Koeffizient\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Ausgabe des Gini-Werts für meine Population\ngini_value <- gini(population)\n\n# Ausgabe des Gini-Koeffizienten\ngini_value\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.1138885\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Histogramm erstellen\n# Erforderliche Bibliothek laden\nlibrary(ggplot2)\n\n# Funktion zur Berechnung des Gini-Koeffizienten\ngini <- function(y) {\n  y <- sort(y)\n  n <- length(y)\n  numer <- 2 * sum((1:n) * y)\n  denom <- n * sum(y)\n  return ((numer / denom) - (n + 1) / n)\n}\n\n# Funktion zur Erstellung des Histogramms\nhist_custom <- function(population, label=\"pop\", bins=30) {\n  # Berechne den Gini-Koeffizienten\n  gini_value <- round(gini(population), 2)\n  \n  # Füge den Gini-Koeffizienten zur Beschriftung hinzu\n  label <- paste(label, \": G=\", gini_value, sep=\"\")\n  \n  # Erstelle das Histogramm mit ggplot2\n  ggplot(data.frame(population), aes(x=population)) +\n    geom_histogram(bins=bins, fill=\"blue\", alpha=0.5) +\n    labs(x=\"wealth\", y=\"count\", title=label) +\n    theme_minimal() +\n    theme(plot.title = element_text(hjust=0.5)) +  # Zentriere den Titel\n    scale_x_continuous() +\n    scale_y_continuous()\n}\n\n# Beispielaufruf\nset.seed(123)\nN <- 5000\nMU <- 100\npopulation <- rnorm(N, mean=MU, sd=MU/5)\n\n# Histogramm plotten\nhist_custom(population, label=\"Population\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Transaction\nrandom_split <- function(A, B) {\n  # Nimm das gesamte Geld im Pot\n  pot <- A + B\n  \n  # Teile es zufällig auf\n  share <- runif(1, min = 0, max = pot)\n  \n  # Rückgabe des Anteils und des verbleibenden Geldes\n  return(c(share, pot - share))\n}\n\n# Beispielaufruf der Funktion\nA <- 100\nB <- 200\nresult <- random_split(A, B)\n\n# Ausgabe des Ergebnisses\ncat(\"Actor 1 gets:\", result[1], \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nActor 1 gets: 93.17751 \n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Actor 2 gets:\", result[2], \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nActor 2 gets: 206.8225 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Interaction\nanyone <- function(N) {\n  # Wählt zufällig zwei eindeutige Werte aus dem Bereich 0 bis N-1\n  return(sample(0:(N - 1), 2))\n}\n\n# Beispielaufruf der Funktion\nN <- 10\nresult <- anyone(N)\n\n# Ausgabe des Ergebnisses\ncat(\"Randomly selected values:\", result[1], \"and\", result[2], \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRandomly selected values: 3 and 8 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n##Simulation\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}